//ハッシュアルゴリズムの特定
hash-identifier #立ち上がったコンソールのHASH：にハッシュ値を入れる
hashid <hash>　#コマンドの引数にハッシュ値を入れる

//hashcat
hashcat -m <アルゴリズム> <file name> #基本構文
hashcat -h | grep "<アルゴリズム>" #ハッシュタイプの検索

-m 0 #MD5
-m 10 #MD5(pass.salt)
-m 20 #MD5(salt.pass)
-m 100 #SHA1
-m 1000 #NTLM
-m 3200 #blowfish
-m 13100 #Kerberos 5 TGS-REP
-m 18200 #Kerberos 5 AS-REP

-a 0 #辞書
-a 1 #辞書の組み合わせ
-a 3 #ブルートフォース
-a 6 #辞書＋マスク
-a 7 #マスク＋辞書
-a 9 #アソシエイト

//john the ripper
unshadow /etc/passwd /etc/shadow > hash.txt #ハッシュファイルの用意、パスとシャドウの順番は決まってる
john <hash file> #基本
john --wordlist=/usr/share/wordlists/rockyou.txt <hash file> #テキストを利用
john --show <hash file> #解析済みのパスを見る
zip2john <zip file name> > <hash name> #ZIPからハッシュを抽出
pfx2john <pfx file name> > <hash name> #pfxからハッシュを抽出
openssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -nodes -out private.key #pfxから秘密鍵を抽出
openssl pkcs12 -in legacyy_dev_auth.pfx -clcerts -nokeys -out key.cer #pfxから証明書を抽出

--format=afs
--format=crypt
--format=des
--format=md5
--format=pdf
--format=ssh
--format=zip

//base64
cat <base64> | base64 -d #コマンドで解読できる

//gpp
gpp-decrypt <hash> #ADなどで使われるGPP AESを復号

//NTLMハッシュの作成
iconv -f ASCII -t UTF-16LE <(printf "<pass>") | openssl dgst -md4　#入手したパスからハッシュを生成

